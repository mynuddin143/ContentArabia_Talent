/*
 *  CAPD 1 - Talent Registration
 *
 * This document contains the specification of the Talent Registration API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Swashbuckle.Swagger.Annotations;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ContactDetailsApiController : ControllerBase
    {
        private readonly IContactDetailsApiController _iContactDetailsApiController;
        public ContactDetailsApiController(IContactDetailsApiController iContactDetailsApiController)
        {

            _iContactDetailsApiController = iContactDetailsApiController;
        }
        /// <summary>
        /// Remove ContactDetails project
        /// </summary>
        /// <remarks>Remove ContactDetails project</remarks>
        /// <param name="talentId">delete talaent project</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        [HttpDelete]
        [Route("/talentContactDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentContactDetailsTalentIdDelete")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentContactDetailsTalentIdDelete([FromRoute][Required]string talentId)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            return new ObjectResult(_iContactDetailsApiController.TalentContactDetailsTalentIdDelete(talentId));
        }

        /// <summary>
        /// Gets an talent ContactDetails
        /// </summary>
        /// <remarks>Gets an Talnet ContactDetails to the system</remarks>
        /// <param name="talentId">talent ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        /// <response code="405">Invalid input</response>
        [HttpGet]
        [Route("/talentContactDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentContactDetailsTalentIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConatctDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentContactDetailsTalentIdGet([FromRoute][Required]string talentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConatctDetails));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Cena\",\n  \"emailAddress\" : \"abcxyz@gmail.com\",\n  \"phoneNumber\" : \"9876543210\",\n  \"profilePhoto\" : \"profilePhoto\",\n  \"contentlyPortifolioURl\" : \"username.contenly.com\",\n  \"primarySkill\" : \"sql, react\",\n  \"personalWebsiteUrl\" : \"personalWebsiteUrl\",\n  \"timeZone\" : \"INdia(East)05:30\",\n  \"location\" : \"India,Dubai\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ConatctDetails>(exampleJson)
                        : default(ConatctDetails);            //TODO: Change the data returned
            return new ObjectResult(_iContactDetailsApiController.TalentContactDetailsTalentIdGet(talentId));
        }

        /// <summary>
        /// Gets an talent ContactDetails item
        /// </summary>
        /// <remarks>Gets an Talnet ContactDetails to the system</remarks>
        /// <param name="talentId">talent ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        /// <response code="405">Invalid input</response>
        [HttpPut]
        [Route("/talentContactDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentContactDetailsTalentIdPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConatctDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentContactDetailsTalentIdPut([FromBody]ConatctDetails body,[FromRoute][Required]string talentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConatctDetails));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Cena\",\n  \"emailAddress\" : \"abcxyz@gmail.com\",\n  \"phoneNumber\" : \"9876543210\",\n  \"profilePhoto\" : \"profilePhoto\",\n  \"contentlyPortifolioURl\" : \"username.contenly.com\",\n  \"primarySkill\" : \"sql, react\",\n  \"personalWebsiteUrl\" : \"personalWebsiteUrl\",\n  \"timeZone\" : \"INdia(East)05:30\",\n  \"location\" : \"India,Dubai\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ConatctDetails>(exampleJson)
                        : default(ConatctDetails);            //TODO: Change the data returned
            return new ObjectResult(_iContactDetailsApiController.TalentContactDetailsTalentIdPut(body,talentId));
        }
    }
}
