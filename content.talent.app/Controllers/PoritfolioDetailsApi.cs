/*
 *  CAPD 1 - Talent Registration
 *
 * This document contains the specification of the Talent Registration API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Swashbuckle.Swagger.Annotations;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PoritfolioDetailsApiController : ControllerBase
    { 
        /// <summary>
        /// Remove talaent project
        /// </summary>
        /// <remarks>Remove talaent project</remarks>
        /// <param name="talentId">delete talaent project</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        [HttpDelete]
        [Route("/talentProjectDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentProjectDetailsTalentIdDelete")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentProjectDetailsTalentIdDelete([FromRoute][Required]long? talentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Gets an talent client item
        /// </summary>
        /// <remarks>Gets an Talnet client to the system</remarks>
        /// <param name="talentId">talent ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        /// <response code="405">Invalid input</response>
        [HttpGet]
        [Route("/talentProjectDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentProjectDetailsTalentIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentProjectDetailsTalentIdGet([FromRoute][Required]long? talentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectDetails));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);
            string exampleJson = null;
            exampleJson = "{\n  \"modifiedOn\" : \"23012021\",\n  \"stats\" : [ \"http://behance.vo.\", \"Product Design\" ],\n  \"name\" : \"jhon\",\n  \"publishedOn\" : \"23012021\",\n  \"matureContent\" : \"http://www.behance.net/gallery\",\n  \"owners\" : [ \"http://behance.vo.\", \"Product Design\" ],\n  \"id\" : 33423,\n  \"fields\" : [ \"Branding\", \"Product Design\" ],\n  \"createdOn\" : \"23012021\",\n  \"url\" : \"http://www.behance.net/gallery\",\n  \"covers\" : [ \"http://behance.vo.\", \"Product Design\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ProjectDetails>(exampleJson)
                        : default(ProjectDetails);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an talent client item
        /// </summary>
        /// <remarks>Gets an Talnet client to the system</remarks>
        /// <param name="talentId">talent ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Request had bad syntax or was impossible to fulfill.</response>
        /// <response code="401">Unauthorized. Missing valid authentication credentials for the target resource.</response>
        /// <response code="404">The specified resource was not found.</response>
        /// <response code="405">Invalid input</response>
        [HttpPut]
        [Route("/talentProjectDetails/{talentId}")]
        [ValidateModelState]
        [SwaggerOperation("TalentProjectDetailsTalentIdPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Request had bad syntax or was impossible to fulfill.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized. Missing valid authentication credentials for the target resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found.")]
        public virtual IActionResult TalentProjectDetailsTalentIdPut([FromRoute][Required]long? talentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectDetails));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);
            string exampleJson = null;
            exampleJson = "{\n  \"modifiedOn\" : \"23012021\",\n  \"stats\" : [ \"http://behance.vo.\", \"Product Design\" ],\n  \"name\" : \"jhon\",\n  \"publishedOn\" : \"23012021\",\n  \"matureContent\" : \"http://www.behance.net/gallery\",\n  \"owners\" : [ \"http://behance.vo.\", \"Product Design\" ],\n  \"id\" : 33423,\n  \"fields\" : [ \"Branding\", \"Product Design\" ],\n  \"createdOn\" : \"23012021\",\n  \"url\" : \"http://www.behance.net/gallery\",\n  \"covers\" : [ \"http://behance.vo.\", \"Product Design\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ProjectDetails>(exampleJson)
                        : default(ProjectDetails);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
